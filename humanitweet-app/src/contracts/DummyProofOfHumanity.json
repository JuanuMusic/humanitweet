{
  "contractName": "DummyProofOfHumanity",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "contract IProofOfHumanity",
          "name": "_PoH",
          "type": "address"
        }
      ],
      "name": "changePoH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        }
      ],
      "name": "changeGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_submissionID",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"changeGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IProofOfHumanity\",\"name\":\"_PoH\",\"type\":\"address\"}],\"name\":\"changePoH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_submissionID\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeGovernor(address)\":{\"details\":\"Changes the address of the the governor.\",\"params\":{\"_governor\":\"The address of the new governor.\"}},\"changePoH(address)\":{\"details\":\"Changes the address of the the related ProofOfHumanity contract.\",\"params\":{\"_PoH\":\"The address of the new contract.\"}},\"constructor\":{\"details\":\"Constructor.\"},\"isRegistered(address)\":{\"details\":\"Returns true if the submission is registered and not expired.\",\"params\":{\"_submissionID\":\"The address of the submission.\"},\"returns\":{\"_0\":\"Whether the submission is registered or not.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/E/Code/Repos/JuanuMusic/humanitweet/humanitweet-contracts/contracts/DummyProofOfHumanity.sol\":\"DummyProofOfHumanity\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/Code/Repos/JuanuMusic/humanitweet/humanitweet-contracts/contracts/DummyProofOfHumanity.sol\":{\"keccak256\":\"0x98fc35279f8f8bb79481590de83c4b8d834a04db414d7a9bdb3fc6319c445ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc9cb35192b548fcfe34666bf69d96dfe9f3943bab4e1b770a47a670b4caad1\",\"dweb:/ipfs/QmTJnbhrJ5aS7853yygHMop1AsAf5vmZ7NLV4oPhMZy9BX\"]},\"/E/Code/Repos/JuanuMusic/humanitweet/humanitweet-contracts/contracts/IProofOfHumanity.sol\":{\"keccak256\":\"0x949a7f977a6ed647a6f7f0a94378f0e7afd81e80f07deb9bce5e76d3ed642544\",\"urls\":[\"bzz-raw://936bdc0662fc9f3cc49bded4f8432baeba65cb7c073dad508c2aee7bca329cae\",\"dweb:/ipfs/QmUgQiV4q4eDfrf9vVGpkNhTX4DtqLUUHw3H9TJm7AspwS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610267806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063c3c5a54714610046578063e4c0aaf414610076578063ee864d5514610092575b600080fd5b610060600480360381019061005b9190610137565b6100ae565b60405161006d9190610198565b60405180910390f35b610090600480360381019061008b9190610137565b610107565b005b6100ac60048036038101906100a79190610160565b61010a565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b50565b50565b60008135905061011c81610203565b92915050565b6000813590506101318161021a565b92915050565b60006020828403121561014957600080fd5b60006101578482850161010d565b91505092915050565b60006020828403121561017257600080fd5b600061018084828501610122565b91505092915050565b610192816101c5565b82525050565b60006020820190506101ad6000830184610189565b92915050565b60006101be826101e3565b9050919050565b60008115159050919050565b60006101dc826101b3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61020c816101b3565b811461021757600080fd5b50565b610223816101d1565b811461022e57600080fd5b5056fea2646970667358221220aa72d061a5bf8359f9f2cc560b9dda653fda7b536ae27d4534f01d19e7ecf8dd64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063c3c5a54714610046578063e4c0aaf414610076578063ee864d5514610092575b600080fd5b610060600480360381019061005b9190610137565b6100ae565b60405161006d9190610198565b60405180910390f35b610090600480360381019061008b9190610137565b610107565b005b6100ac60048036038101906100a79190610160565b61010a565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b50565b50565b60008135905061011c81610203565b92915050565b6000813590506101318161021a565b92915050565b60006020828403121561014957600080fd5b60006101578482850161010d565b91505092915050565b60006020828403121561017257600080fd5b600061018084828501610122565b91505092915050565b610192816101c5565b82525050565b60006020820190506101ad6000830184610189565b92915050565b60006101be826101e3565b9050919050565b60008115159050919050565b60006101dc826101b3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61020c816101b3565b811461021757600080fd5b50565b610223816101d1565b811461022e57600080fd5b5056fea2646970667358221220aa72d061a5bf8359f9f2cc560b9dda653fda7b536ae27d4534f01d19e7ecf8dd64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2017:15",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:15"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:15",
                "type": ""
              }
            ],
            "src": "7:139:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "228:111:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "238:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "260:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "247:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "247:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "238:5:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "327:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IProofOfHumanity_$268",
                      "nodeType": "YulIdentifier",
                      "src": "276:50:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "276:57:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "276:57:15"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IProofOfHumanity_$268",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "206:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "214:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "222:5:15",
                "type": ""
              }
            ],
            "src": "152:187:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "411:196:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "457:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "466:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "469:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "459:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "459:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "459:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "432:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "441:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "428:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "428:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "453:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "424:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "421:2:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "483:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "498:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "512:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "502:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "527:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "562:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "573:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "558:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "558:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "582:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "537:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "537:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "527:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "381:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "392:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "404:6:15",
                "type": ""
              }
            ],
            "src": "345:262:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "703:220:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "749:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "758:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "761:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "751:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "751:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "751:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "724:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "733:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "720:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "720:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "745:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "716:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "713:2:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "775:141:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "790:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "804:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "794:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "819:87:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "878:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "889:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "874:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "874:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "898:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IProofOfHumanity_$268",
                          "nodeType": "YulIdentifier",
                          "src": "829:44:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "829:77:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "819:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IProofOfHumanity_$268",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "673:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "684:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "696:6:15",
                "type": ""
              }
            ],
            "src": "613:310:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "988:50:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1005:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1025:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1010:14:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1010:21:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "998:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "998:34:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "998:34:15"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "976:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "983:3:15",
                "type": ""
              }
            ],
            "src": "929:109:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1136:118:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1146:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1158:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1169:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1154:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1154:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1146:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1220:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1233:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1244:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1229:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1229:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1182:37:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1182:65:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1182:65:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1108:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1120:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1131:4:15",
                "type": ""
              }
            ],
            "src": "1044:210:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1305:51:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1315:35:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1344:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1326:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1326:24:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1315:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1287:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1297:7:15",
                "type": ""
              }
            ],
            "src": "1260:96:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1404:48:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1414:32:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1439:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1432:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1432:13:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1425:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1425:21:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1414:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1386:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1396:7:15",
                "type": ""
              }
            ],
            "src": "1362:90:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1527:51:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1537:35:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1566:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1548:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1548:24:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1537:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IProofOfHumanity_$268",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1509:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1519:7:15",
                "type": ""
              }
            ],
            "src": "1458:120:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1629:81:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1639:65:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1654:5:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1661:42:15",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1650:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1650:54:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1639:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1611:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1621:7:15",
                "type": ""
              }
            ],
            "src": "1584:126:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1759:79:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1816:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1825:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1828:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1818:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1818:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1818:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1782:5:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1807:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1789:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1789:24:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1779:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1779:35:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1772:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1772:43:15"
                  },
                  "nodeType": "YulIf",
                  "src": "1769:2:15"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1752:5:15",
                "type": ""
              }
            ],
            "src": "1716:122:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1911:103:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1992:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2001:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2004:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1994:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1994:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1994:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1934:5:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1983:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IProofOfHumanity_$268",
                              "nodeType": "YulIdentifier",
                              "src": "1941:41:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1941:48:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1931:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1931:59:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1924:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1924:67:15"
                  },
                  "nodeType": "YulIf",
                  "src": "1921:2:15"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IProofOfHumanity_$268",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1904:5:15",
                "type": ""
              }
            ],
            "src": "1844:170:15"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_IProofOfHumanity_$268(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IProofOfHumanity_$268(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IProofOfHumanity_$268(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IProofOfHumanity_$268(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_IProofOfHumanity_$268(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IProofOfHumanity_$268(value) {\n        if iszero(eq(value, cleanup_t_contract$_IProofOfHumanity_$268(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 15,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "95:1002:0:-:0;;;215:55;;;;;;;;;;252:10;240:9;;:22;;;;;;;;;;;;;;;;;;95:1002;;;;;;",
  "deployedSourceMap": "95:1002:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:141;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;668:63;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;471:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;953:141;1036:4;1077:9;;;;;;;;;;;1060:26;;:13;:26;;;1053:33;;953:141;;;:::o;668:63::-;;:::o;471:62::-;;:::o;7:139:15:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:187::-;;260:6;247:20;238:29;;276:57;327:5;276:57;:::i;:::-;228:111;;;;:::o;345:262::-;;453:2;441:9;432:7;428:23;424:32;421:2;;;469:1;466;459:12;421:2;512:1;537:53;582:7;573:6;562:9;558:22;537:53;:::i;:::-;527:63;;483:117;411:196;;;;:::o;613:310::-;;745:2;733:9;724:7;720:23;716:32;713:2;;;761:1;758;751:12;713:2;804:1;829:77;898:7;889:6;878:9;874:22;829:77;:::i;:::-;819:87;;775:141;703:220;;;;:::o;929:109::-;1010:21;1025:5;1010:21;:::i;:::-;1005:3;998:34;988:50;;:::o;1044:210::-;;1169:2;1158:9;1154:18;1146:26;;1182:65;1244:1;1233:9;1229:17;1220:6;1182:65;:::i;:::-;1136:118;;;;:::o;1260:96::-;;1326:24;1344:5;1326:24;:::i;:::-;1315:35;;1305:51;;;:::o;1362:90::-;;1439:5;1432:13;1425:21;1414:32;;1404:48;;;:::o;1458:120::-;;1548:24;1566:5;1548:24;:::i;:::-;1537:35;;1527:51;;;:::o;1584:126::-;;1661:42;1654:5;1650:54;1639:65;;1629:81;;;:::o;1716:122::-;1789:24;1807:5;1789:24;:::i;:::-;1782:5;1779:35;1769:2;;1828:1;1825;1818:12;1769:2;1759:79;:::o;1844:170::-;1941:48;1983:5;1941:48;:::i;:::-;1934:5;1931:59;1921:2;;2004:1;2001;1994:12;1921:2;1911:103;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.0;\r\n\r\nimport \"./IProofOfHumanity.sol\";\r\n\r\ncontract DummyProofOfHumanity is IProofOfHumanityProxy {\r\n\r\naddress _governor;\r\n    /** @dev Constructor.\r\n     */\r\n    constructor() {\r\n        _governor = msg.sender;\r\n    }\r\n    //constructor(IProofOfHumanity _PoH) virtual;\r\n\r\n    /** @dev Changes the address of the the related ProofOfHumanity contract.\r\n     *  @param _PoH The address of the new contract.\r\n     */\r\n    function changePoH(IProofOfHumanity _PoH) override external {}\r\n    \r\n    /** @dev Changes the address of the the governor.\r\n     *  @param _governor The address of the new governor.\r\n     */\r\n    function changeGovernor(address _governor) override external {}\r\n    \r\n\r\n    /** @dev Returns true if the submission is registered and not expired.\r\n     *  @param _submissionID The address of the submission.\r\n     *  @return Whether the submission is registered or not.\r\n     */\r\n    function isRegistered(address _submissionID) override public view virtual returns (bool) {\r\n        return _submissionID == _governor;\r\n    }\r\n}",
  "sourcePath": "E:/Code/Repos/JuanuMusic/humanitweet/humanitweet-contracts/contracts/DummyProofOfHumanity.sol",
  "ast": {
    "absolutePath": "/E/Code/Repos/JuanuMusic/humanitweet/humanitweet-contracts/contracts/DummyProofOfHumanity.sol",
    "exportedSymbols": {
      "DummyProofOfHumanity": [
        48
      ],
      "IERC20": [
        516
      ],
      "IProofOfHumanity": [
        268
      ],
      "IProofOfHumanityProxy": [
        291
      ]
    },
    "id": 49,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:0"
      },
      {
        "absolutePath": "/E/Code/Repos/JuanuMusic/humanitweet/humanitweet-contracts/contracts/IProofOfHumanity.sol",
        "file": "./IProofOfHumanity.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 49,
        "sourceUnit": 292,
        "src": "59:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "IProofOfHumanityProxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 291,
              "src": "128:21:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "128:21:0"
          }
        ],
        "contractDependencies": [
          291
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 48,
        "linearizedBaseContracts": [
          48,
          291
        ],
        "name": "DummyProofOfHumanity",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "_governor",
            "nodeType": "VariableDeclaration",
            "scope": 48,
            "src": "155:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "155:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "229:41:0",
              "statements": [
                {
                  "expression": {
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10,
                      "name": "_governor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "240:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 11,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "252:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "252:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "240:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "240:22:0"
                }
              ]
            },
            "documentation": {
              "id": 7,
              "nodeType": "StructuredDocumentation",
              "src": "179:30:0",
              "text": "@dev Constructor."
            },
            "id": 16,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "226:2:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:0:0"
            },
            "scope": 48,
            "src": "215:55:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              276
            ],
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "531:2:0",
              "statements": []
            },
            "documentation": {
              "id": 17,
              "nodeType": "StructuredDocumentation",
              "src": "329:136:0",
              "text": "@dev Changes the address of the the related ProofOfHumanity contract.\n  @param _PoH The address of the new contract."
            },
            "functionSelector": "ee864d55",
            "id": 25,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changePoH",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "513:8:0"
            },
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_PoH",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "490:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IProofOfHumanity_$268",
                    "typeString": "contract IProofOfHumanity"
                  },
                  "typeName": {
                    "id": 19,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18,
                      "name": "IProofOfHumanity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 268,
                      "src": "490:16:0"
                    },
                    "referencedDeclaration": 268,
                    "src": "490:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IProofOfHumanity_$268",
                      "typeString": "contract IProofOfHumanity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "489:23:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "531:0:0"
            },
            "scope": 48,
            "src": "471:62:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              282
            ],
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "729:2:0",
              "statements": []
            },
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "545:117:0",
              "text": "@dev Changes the address of the the governor.\n  @param _governor The address of the new governor."
            },
            "functionSelector": "e4c0aaf4",
            "id": 33,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeGovernor",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 30,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "711:8:0"
            },
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_governor",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "692:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "691:19:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "729:0:0"
            },
            "scope": 48,
            "src": "668:63:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              290
            ],
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "1042:52:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42,
                      "name": "_submissionID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1060:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 43,
                      "name": "_governor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1077:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1060:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 41,
                  "id": 45,
                  "nodeType": "Return",
                  "src": "1053:33:0"
                }
              ]
            },
            "documentation": {
              "id": 34,
              "nodeType": "StructuredDocumentation",
              "src": "745:202:0",
              "text": "@dev Returns true if the submission is registered and not expired.\n  @param _submissionID The address of the submission.\n  @return Whether the submission is registered or not."
            },
            "functionSelector": "c3c5a547",
            "id": 47,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 38,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "998:8:0"
            },
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_submissionID",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "975:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "974:23:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1036:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1035:6:0"
            },
            "scope": 48,
            "src": "953:141:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 49,
        "src": "95:1002:0"
      }
    ],
    "src": "33:1064:0"
  },
  "legacyAST": {
    "absolutePath": "/E/Code/Repos/JuanuMusic/humanitweet/humanitweet-contracts/contracts/DummyProofOfHumanity.sol",
    "exportedSymbols": {
      "DummyProofOfHumanity": [
        48
      ],
      "IERC20": [
        516
      ],
      "IProofOfHumanity": [
        268
      ],
      "IProofOfHumanityProxy": [
        291
      ]
    },
    "id": 49,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:0"
      },
      {
        "absolutePath": "/E/Code/Repos/JuanuMusic/humanitweet/humanitweet-contracts/contracts/IProofOfHumanity.sol",
        "file": "./IProofOfHumanity.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 49,
        "sourceUnit": 292,
        "src": "59:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "IProofOfHumanityProxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 291,
              "src": "128:21:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "128:21:0"
          }
        ],
        "contractDependencies": [
          291
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 48,
        "linearizedBaseContracts": [
          48,
          291
        ],
        "name": "DummyProofOfHumanity",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "_governor",
            "nodeType": "VariableDeclaration",
            "scope": 48,
            "src": "155:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "155:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "229:41:0",
              "statements": [
                {
                  "expression": {
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10,
                      "name": "_governor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "240:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 11,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "252:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "252:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "240:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "240:22:0"
                }
              ]
            },
            "documentation": {
              "id": 7,
              "nodeType": "StructuredDocumentation",
              "src": "179:30:0",
              "text": "@dev Constructor."
            },
            "id": 16,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "226:2:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:0:0"
            },
            "scope": 48,
            "src": "215:55:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              276
            ],
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "531:2:0",
              "statements": []
            },
            "documentation": {
              "id": 17,
              "nodeType": "StructuredDocumentation",
              "src": "329:136:0",
              "text": "@dev Changes the address of the the related ProofOfHumanity contract.\n  @param _PoH The address of the new contract."
            },
            "functionSelector": "ee864d55",
            "id": 25,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changePoH",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "513:8:0"
            },
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_PoH",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "490:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IProofOfHumanity_$268",
                    "typeString": "contract IProofOfHumanity"
                  },
                  "typeName": {
                    "id": 19,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18,
                      "name": "IProofOfHumanity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 268,
                      "src": "490:16:0"
                    },
                    "referencedDeclaration": 268,
                    "src": "490:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IProofOfHumanity_$268",
                      "typeString": "contract IProofOfHumanity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "489:23:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "531:0:0"
            },
            "scope": 48,
            "src": "471:62:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              282
            ],
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "729:2:0",
              "statements": []
            },
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "545:117:0",
              "text": "@dev Changes the address of the the governor.\n  @param _governor The address of the new governor."
            },
            "functionSelector": "e4c0aaf4",
            "id": 33,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeGovernor",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 30,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "711:8:0"
            },
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_governor",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "692:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "691:19:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "729:0:0"
            },
            "scope": 48,
            "src": "668:63:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              290
            ],
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "1042:52:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42,
                      "name": "_submissionID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1060:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 43,
                      "name": "_governor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1077:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1060:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 41,
                  "id": 45,
                  "nodeType": "Return",
                  "src": "1053:33:0"
                }
              ]
            },
            "documentation": {
              "id": 34,
              "nodeType": "StructuredDocumentation",
              "src": "745:202:0",
              "text": "@dev Returns true if the submission is registered and not expired.\n  @param _submissionID The address of the submission.\n  @return Whether the submission is registered or not."
            },
            "functionSelector": "c3c5a547",
            "id": 47,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 38,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "998:8:0"
            },
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_submissionID",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "975:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "974:23:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1036:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1035:6:0"
            },
            "scope": 48,
            "src": "953:141:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 49,
        "src": "95:1002:0"
      }
    ],
    "src": "33:1064:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5778": {
      "events": {},
      "links": {},
      "address": "0xCbE90A1fF701CEA59d4C6e87676341563e78B00c",
      "transactionHash": "0xaa368225b1dff86cd55223d329cb1c539c95e6623bc97cbaa54e24427896d087"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-24T22:22:17.789Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "changeGovernor(address)": {
        "details": "Changes the address of the the governor.",
        "params": {
          "_governor": "The address of the new governor."
        }
      },
      "changePoH(address)": {
        "details": "Changes the address of the the related ProofOfHumanity contract.",
        "params": {
          "_PoH": "The address of the new contract."
        }
      },
      "constructor": {
        "details": "Constructor."
      },
      "isRegistered(address)": {
        "details": "Returns true if the submission is registered and not expired.",
        "params": {
          "_submissionID": "The address of the submission."
        },
        "returns": {
          "_0": "Whether the submission is registered or not."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}